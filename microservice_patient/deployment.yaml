apiVersion: v1
kind: ConfigMap
metadata:
  name: patient-service-config
data:
  application.yml: |
    spring:
      application:
        name: patient-service
      datasource:
        url: jdbc:postgresql://postgres-patient:5432/patient_exam_m2
    eureka:
      client:
        serviceUrl:
          defaultZone: http://eureka-server:8761/eureka/
    server:
      port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: patient-service
  labels:
    app: patient-service
spec:
  selector:
    app: patient-service
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: patient-service
  labels:
    app: patient-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: patient-service
  template:
    metadata:
      labels:
        app: patient-service
    spec:
      containers:
        - name: patient-service
          image: patient-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: JAVA_OPTS
              value: "-Xms256m -Xmx512m -XX:+UseContainerSupport"
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 15
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
      volumes:
        - name: config-volume
          configMap:
            name: patient-service-config
